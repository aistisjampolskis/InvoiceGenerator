using System;
using System.Collections.Generic;
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var welcome = Welcome.FromJson(jsonString);

namespace QuickType
{
    

    public partial class Welcome
    {
        [JsonProperty("Id")]
        public long Id { get; set; }

        [JsonProperty("OrderNumber")]
        public string OrderNumber { get; set; }

        [JsonProperty("DateTime")]
        public DateTimeOffset DateTime { get; set; }

        [JsonProperty("PaymentOption")]
        public long PaymentOption { get; set; }

        [JsonProperty("Client")]
        public string Client { get; set; }

        [JsonProperty("Itemss")]
        public List<Itemss> Itemss { get; set; }

        [JsonProperty("InvoiceTotal")]
        public double InvoiceTotal { get; set; }

        [JsonProperty("QtyTotal")]
        public long QtyTotal { get; set; }
    }

    public partial class Itemss
    {
        [JsonProperty("Description")]
        public string Description { get; set; }

        [JsonProperty("Quantyti")]
        public long Quantyti { get; set; }

        [JsonProperty("Price")]
        public double Price { get; set; }

        [JsonProperty("RowTotal")]
        public double RowTotal { get; set; }
    }

    public partial class Welcome
    {
        public static List<Welcome> FromJson(string json) => JsonConvert.DeserializeObject<List<Welcome>>(json, QuickType.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<Welcome> self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
